var1 = "함수 is amazing"
print(var1.replace("함수", "라이브러리"))
#str은 따옴표 잊지 말자
#변수.함수(~~)

#인덱스: 문자위치를 숫자로 표현하기

var2 = var1.index("a")
print(var2)

var2 = var1.index("a", var2+1)
print(var2)

print(var1.find("is"))
print(var1.find("good"))
#find의 경우 index와 다르게 없는 값을 찾는 경우도 에러가 안뜨고 -1로 반환해줌

#문자열 포멧 : %s 유용성 높음. 필요한 자리에 변수 넣어서 필요한 값 넣을 수 있음
print("나는 %d살입니다." % var2)
print("라이브러리는 다양한 것들을 쓸 수 있죠. 라이브러리의 %s" % var1)

print("나는 %s살입니다." % var2)

print("파이썬을 %s번 해본결과, %s" % (var2,var1))

print("문자열 포멧은 최소{}번은 활용해봐야 합니다.".format(var2))
# 중괄호 {} 사용, 출력 값.format(변수)로 활용 

print('변수2의 값은 {}이고, 변수 1의 값은 "{}" 입니다'.format(var2,var1))
# 중괄호 안에 이름 넣을 수 있음 => 이 경우 format이 받는 변수의 순서도 달라도 상관없음
print('변수2의 값은 {변수2}이고, 변수 1의 값은 "{변수1}" 입니다'.format(변수2=var2, 변수1=var1))

print('변수2의 값은 {변수2}이고, 변수 1의 값은 "{변수1}" 입니다'.format(변수1=var1, 변수2=var2))

#또 다른 문자열 포멧 방법
var3 = "재정정책"
var4 = "통화정책"
print(f"국가의 경제정책은 {var3}과 {var4}로 나눌 수 있습니다.")
#출력값 앞에 f를 넣는 것이 핵심

#탈출문자 - 줄바꿈
print("백문이 불여일견\n백견이 불여일타")

# 경로 등 (\)을 표현할 때 => \\로 작성
print("C:\\Users\\blabla")

#\r 은 앞에서 부터 대체
print("** 효과\r구축")


